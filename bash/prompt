shopt -s checkwinsize

#Defining Colors Used
RED='\[\e[0;31m\]'
REDWARNING='\[\e[4;31m\]'
GREEN='\[\e[0;32m\]'
YELLOW='\[\e[2;33m\]'
ORANGE='\[\e[0;33m\]'
BLUE='\[\e[0;34m\]'
MAGENTA='\[\e[0;35m\]'
WHITE='\[\e[0m\]'
IMPORTANT='\[\e[4;0m\]'
GREY='\[\e[1;30m\]'

function parse_git_branch {
  git rev-parse --git-dir &> /dev/null
  git_status="$(git status 2> /dev/null)"
  branch_pattern="^# On branch ([^${IFS}]*)"
  remote_pattern="# Your branch is (.*) of"
  diverge_pattern="# Your branch and (.*) have diverged"
  if [[ ! ${git_status} =~ "working directory clean" ]]; then
    state=" ${RED}•"
    #state=" ${RED}✗"
  else
    state=" ${GREEN}•"
  fi
  # add an else if or two here if you want to get more specific
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="${YELLOW}↑"
    else
      remote="${YELLOW}↓"
    fi
  fi
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${RED}↕"
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch="${ORANGE}${BASH_REMATCH[1]}"
    gitstate="${state}${remote}"
    rdelim="${WHITE}("
    ldelim="${WHITE})"
    echo -e "${rdelim}${branch}${gitstate}${ldelim}\n$ "
  else
    echo -e " $ "
  fi
}

function prompt_func() {
    prompt="[${GREEN}\h${WHITE}:${BLUE}\w${WHITE}]$(parse_git_branch)"
    PS1="$prompt${COLOR_NONE}"
}

PROMPT_COMMAND=prompt_func
